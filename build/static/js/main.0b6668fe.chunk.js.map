{"version":3,"sources":["plugins/axios.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["axios","defaults","headers","post","http","create","baseURL","useStyles","makeStyles","theme","root","display","flexWrap","textField","marginLeft","spacing","marginRight","width","margin","marginTop","large","height","socket","io","connect","FormScrapper","fecha","classes","React","useState","open","setOpen","category","review","city","country","disableButton","precio","formInputs","setValue","message","setMessage","checkH","checkR","checkT","checkScraper","setCheck","useEffect","getMessage","on","msg","indexError","indexOf","indexSuccess","handleChangeScraper","event","target","name","checked","handleChange","prop","value","handleClose","Dialog","onClose","disableBackdropClick","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","color","autoFocus","disabled","onSubmit","preventDefault","scraper","json","then","response","data","console","log","catch","error","Card","CardHeader","className","card","title","variant","avatar","Avatar","alt","src","subheader","CardContent","TextField","label","onChange","required","helperText","defaultValue","values","FormControl","component","FormLabel","FormGroup","row","FormControlLabel","control","Checkbox","labelPlacement","RadioGroup","aria-label","Radio","CardActions","disableSpacing","type","createMuiTheme","palette","primary","main","tonalOffset","App","ThemeProvider","Grid","container","alignItems","justify","item","xs","Form","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kcAMAA,IAAMC,SAASC,QAAQC,KAAK,gBAAiB,oCAE7C,IAIeC,EAJAJ,IAAMK,OANR,CACXC,QAAS,0BCSLC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,OACTC,SAAU,QAEdC,UAAW,CACPC,WAAYL,EAAMM,QAAQ,GAC1BC,YAAaP,EAAMM,QAAQ,GAC3BE,MAAO,QAEXC,OAAQ,CACJA,OAAQT,EAAMM,QAAQ,GACtBI,UAAWV,EAAMM,QAAQ,IAE7BK,MAAO,CACHH,MAAOR,EAAMM,QAAQ,GACrBM,OAAQZ,EAAMM,QAAQ,QAI1BO,EAASC,IAAGC,QAAQ,yBA8LTC,EA5LM,SAAC,GAAY,EAAXC,MAAY,IACzBC,EAAUpB,IADc,EAENqB,IAAMC,UAAS,GAFT,mBAEvBC,EAFuB,KAEjBC,EAFiB,OAGCH,IAAMC,SAAS,CAC1CG,SAAU,IACVC,OAAQ,KACRP,MAAO,GACPQ,KAAM,GACNC,QAAS,OACTC,eAAe,EACfC,OAAQ,UAVkB,mBAGvBC,EAHuB,KAGXC,EAHW,OAYAX,IAAMC,SAAS,IAZf,mBAYvBW,EAZuB,KAYdC,EAZc,OAaGb,IAAMC,SAAS,CAC5Ca,QAAQ,EACRC,QAAQ,EACRC,QAAQ,IAhBkB,mBAavBC,EAbuB,KAaTC,EAbS,KAmB9BC,qBAAU,WACNC,OAGJ,IAAMA,EAAa,WACf1B,EAAO2B,GAAG,kBAAkB,SAAAC,GACxB,IAAIC,EAAaD,EAAIE,QAAQ,SACzBC,EAAeH,EAAIE,QAAQ,eACZ,IAAhBD,IAAuC,IAAlBE,GACpBd,EAAS,2BAAID,GAAL,IAAiBF,eAAe,KAE5CK,EAAWS,OAIbI,EAAsB,SAACC,GACzBT,EAAS,2BAAKD,GAAN,kBAAqBU,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,YAE5DC,EAAe,SAACC,GAAD,OAAU,SAACL,GAC5BhB,EAAS,2BAAID,GAAL,kBAAkBsB,EAAOL,EAAMC,OAAOK,WAE5CC,EAAc,WAChBrB,EAAW,IACXV,GAAQ,IA4BZ,OACI,6BACI,kBAACgC,EAAA,EAAD,CACIjC,KAAMA,EACNkC,QAASF,EACTG,sBAAoB,EACpBC,kBAAgB,qBAChBC,mBAAiB,4BACjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAhB,0BAGA,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAmBF,GAAG,4BACjB7B,IAGL,kBAACgC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,QAASZ,EAAaa,MAAM,UAAUC,WAAS,EAACC,SAAUvC,EAAWF,eAA7E,YAKR,0BAAM0C,SA/CO,SAACvB,GAClBA,EAAMwB,iBACN,IAAIC,EAAU,IACiB,IAA3BnC,EAAY,SACZmC,GAAS,aAEkB,IAA3BnC,EAAY,SACZmC,GAAS,kBAEkB,IAA3BnC,EAAY,SACZmC,GAAS,UAEb,IAAIC,EAAI,2BAAO3C,GAAP,IAAmB,QAAW0C,IACtCzC,EAAS,2BAAID,GAAL,IAAiB,eAAiB,KAC1CP,GAAQ,GACR3B,EAAKD,KAAK,mBAAoB8E,GAC7BC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,MAEfI,OAAM,SAAAC,GACHH,QAAQC,IAAIE,QA2BR,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,UAAWhE,EAAQiE,KAAMC,MAAM,2BAAwBC,QAAQ,WACvEC,OACI,kBAACC,EAAA,EAAD,CAAQC,IAAI,iBAAiBC,IAAI,mBAAmBP,UAAWhE,EAAQP,QACzE+E,UAAU,sBAGhB,kBAACC,EAAA,EAAD,KACI,yBAAKT,UAAWhE,EAAQjB,MACpB,6BACI,kBAAC2F,EAAA,EAAD,CAAWhC,GAAG,OAAOiC,MAAM,eAAYX,UAAWhE,EAAQd,UACtDgD,MAAOvB,EAAWJ,KAAMqE,SAAU5C,EAAa,QAAS6C,UAAQ,EAChEhB,MAA2B,KAApBlD,EAAWJ,KAAauE,WAAgC,KAApBnE,EAAWJ,KAAc,mBAAqB,MAE7F,kBAACmE,EAAA,EAAD,CAAYhC,GAAG,UAAUiC,MAAM,OAAOI,aAAa,GAAGf,UAAWhE,EAAQd,UACrE8F,OAAQrE,EAAWH,QAASoE,SAAU5C,EAAa,aACvD,kBAAC0C,EAAA,EAAD,CAAWhC,GAAG,QAAQiC,MAAM,QAASC,SAAU5C,EAAa,SAAUgC,UAAWhE,EAAQd,UACrFgD,MAAOvB,EAAWZ,MAAO8E,UAAQ,EAAChB,MAA4B,KAArBlD,EAAWZ,MAAc+E,WAAiC,KAArBnE,EAAWZ,MAAe,mBAAmB,OAEnI,6BACI,kBAACkF,EAAA,EAAD,CAAaC,UAAU,WAAWlB,UAAWhE,EAAQT,OAAQsF,UAAQ,GACrE,kBAACM,EAAA,EAAD,CAAWD,UAAU,UAArB,UACA,kBAACE,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAkBC,QAAS,kBAACC,EAAA,EAAD,CAAUzD,QAASb,EAAaH,OACnD6D,SAAUjD,EAAqBG,KAAK,SAASkB,MAAM,YACvD2B,MAAM,UAAUc,eAAe,WAEnC,kBAACH,EAAA,EAAD,CAAkBC,QAAS,kBAACC,EAAA,EAAD,CAAUzD,QAASb,EAAaF,OACnD4D,SAAUjD,EAAqBG,KAAK,SAASkB,MAAM,YACvD2B,MAAM,eAAec,eAAe,WAExC,kBAACH,EAAA,EAAD,CAAkBC,QAAS,kBAACC,EAAA,EAAD,CAAUzD,QAASb,EAAaD,OACnD2D,SAAUjD,EAAqBG,KAAK,SAASkB,MAAM,YACvD2B,MAAM,QAAQc,eAAe,cAKvCvE,EAAaH,QACf,6BACI,kBAACkE,EAAA,EAAD,CAAaC,UAAU,WAAWlB,UAAWhE,EAAQT,QACjD,kBAAC4F,EAAA,EAAD,CAAWD,UAAU,UAArB,aACA,kBAACQ,EAAA,EAAD,CAAYL,KAAG,EAACM,aAAW,YAAY7D,KAAK,YAAaI,MAAOvB,EAAWN,SAAUuE,SAAU5C,EAAa,aACxG,kBAACsD,EAAA,EAAD,CAAkBpD,MAAM,IAAIqD,QAAS,kBAACK,EAAA,EAAD,CAAO5C,MAAM,YAAc2B,MAAM,IAAIc,eAAe,WACzF,kBAACH,EAAA,EAAD,CAAkBpD,MAAM,IAAIqD,QAAS,kBAACK,EAAA,EAAD,CAAO5C,MAAM,YAAc2B,MAAM,IAAIc,eAAe,WACzF,kBAACH,EAAA,EAAD,CAAkBpD,MAAM,IAAIqD,QAAS,kBAACK,EAAA,EAAD,CAAO5C,MAAM,YAAc2B,MAAM,IAAIc,eAAe,WACzF,kBAACH,EAAA,EAAD,CAAkBpD,MAAM,IAAIqD,QAAS,kBAACK,EAAA,EAAD,CAAO5C,MAAM,YAAc2B,MAAM,IAAIc,eAAe,WACzF,kBAACH,EAAA,EAAD,CAAkBpD,MAAM,IAAIqD,QAAS,kBAACK,EAAA,EAAD,CAAO5C,MAAM,YAAc2B,MAAM,QAAQc,eAAe,WAC7F,kBAACH,EAAA,EAAD,CAAkBpD,MAAM,KAAKqD,QAAS,kBAACK,EAAA,EAAD,CAAO5C,MAAM,YAAc2B,MAAM,UAAUc,eAAe,cAK1GvE,EAAaH,QACf,6BACI,kBAACkE,EAAA,EAAD,CAAaC,UAAU,WAAWlB,UAAWhE,EAAQT,QACjD,kBAAC4F,EAAA,EAAD,CAAWD,UAAU,UAArB,aACA,kBAACQ,EAAA,EAAD,CAAYL,KAAG,EAACM,aAAW,SAAS7D,KAAK,SAAUI,MAAOvB,EAAWL,OAAQsE,SAAU5C,EAAa,WAChG,kBAACsD,EAAA,EAAD,CAAkBpD,MAAM,KAAKqD,QAAS,kBAACK,EAAA,EAAD,CAAO5C,MAAM,YAAc2B,MAAM,IAAIc,eAAe,WAC1F,kBAACH,EAAA,EAAD,CAAkBpD,MAAM,KAAKqD,QAAS,kBAACK,EAAA,EAAD,CAAO5C,MAAM,YAAc2B,MAAM,IAAIc,eAAe,WAC1F,kBAACH,EAAA,EAAD,CAAkBpD,MAAM,KAAKqD,QAAS,kBAACK,EAAA,EAAD,CAAO5C,MAAM,YAAc2B,MAAM,IAAIc,eAAe,WAC1F,kBAACH,EAAA,EAAD,CAAkBpD,MAAM,KAAKqD,QAAS,kBAACK,EAAA,EAAD,CAAO5C,MAAM,YAAc2B,MAAM,IAAIc,eAAe,WAC1F,kBAACH,EAAA,EAAD,CAAkBpD,MAAM,MAAMqD,QAAS,kBAACK,EAAA,EAAD,CAAO5C,MAAM,YAAc2B,MAAM,QAAQc,eAAe,WAC/F,kBAACH,EAAA,EAAD,CAAkBpD,MAAM,KAAKqD,QAAS,kBAACK,EAAA,EAAD,CAAO5C,MAAM,YAAc2B,MAAM,UAAUc,eAAe,cAK1GvE,EAAaF,QACf,6BACI,kBAACiE,EAAA,EAAD,CAAaC,UAAU,WAAWlB,UAAWhE,EAAQT,QACjD,kBAAC4F,EAAA,EAAD,CAAWD,UAAU,UAArB,UACA,kBAACQ,EAAA,EAAD,CAAYL,KAAG,EAACM,aAAW,SAAS7D,KAAK,SAAUI,MAAOvB,EAAWD,OAAQkE,SAAU5C,EAAa,WAChG,kBAACsD,EAAA,EAAD,CAAkBpD,MAAM,OAAOqD,QAAS,kBAACK,EAAA,EAAD,CAAO5C,MAAM,YAAc2B,MAAM,OAAOc,eAAe,WAC/F,kBAACH,EAAA,EAAD,CAAkBpD,MAAM,QAAQqD,QAAS,kBAACK,EAAA,EAAD,CAAO5C,MAAM,YAAc2B,MAAM,QAAQc,eAAe,WACjG,kBAACH,EAAA,EAAD,CAAkBpD,MAAM,OAAOqD,QAAS,kBAACK,EAAA,EAAD,CAAO5C,MAAM,YAAc2B,MAAM,YAAYc,eAAe,gBAQxH,kBAACI,EAAA,EAAD,CAAaC,gBAAc,GACvB,kBAAChD,EAAA,EAAD,CAAQqB,QAAQ,YAAYnB,MAAM,UAAU+C,KAAK,SAAS7D,MAAM,UAAhE,uB,iBC5MlBpD,EAAQkH,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,YAAa,MAkBFC,MAdf,WACE,OACE,kBAACC,EAAA,EAAD,CAAexH,MAAOA,GACpB,yBAAKkF,UAAU,OACb,kBAACuC,EAAA,EAAD,CAAMC,WAAS,EAACpH,QAAS,EAAGqH,WAAW,SAASC,QAAQ,UACtD,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACC,EAAD,WCVQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlE,MAAK,SAAAmE,GACJA,EAAaC,gBAEd/D,OAAM,SAAAC,GACLH,QAAQG,MAAMA,EAAMhD,c","file":"static/js/main.0b6668fe.chunk.js","sourcesContent":["import axios from \"axios\";\n\nlet config = {\n  baseURL: 'http://localhost:5000',\n};\n\naxios.defaults.headers.post['Content-Type'] ='application/x-www-form-urlencoded';\n\nconst _axios = axios.create(config);\n\nconst http = _axios\n\nexport default http;","import React, {useEffect} from 'react';\nimport io from 'socket.io-client';\nimport Button from '@material-ui/core/Button';\nimport {Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText} from '@material-ui/core';\nimport { FormControl, FormGroup, FormLabel, FormControlLabel, Radio, RadioGroup, Checkbox } from '@material-ui/core';\nimport { Card, CardHeader, CardContent, CardActions} from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport http from '../plugins/axios'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n      },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: '24ch',\n    },\n    margin: {\n        margin: theme.spacing(1),\n        marginTop: theme.spacing(1),\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n}));\n\nlet socket = io.connect(\"http://localhost:5000\")\n\nconst FormScrapper = ({fecha}) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [formInputs, setValue] = React.useState({\n        category: '3',\n        review: '80',\n        fecha: '',\n        city: '',\n        country: 'None',\n        disableButton: true,\n        precio: 'media',\n    });\n    const [message, setMessage] = React.useState(\"\");\n    const [checkScraper, setCheck] = React.useState({\n        checkH: true,\n        checkR: false,\n        checkT: false\n    })\n    \n    useEffect(() => {\n        getMessage();\n    })\n\n    const getMessage = () => {\n        socket.on(\"message_bender\", msg => {\n            let indexError = msg.indexOf(\"Error\")\n            let indexSuccess = msg.indexOf(\"Finalizado\")\n            if(indexError !== -1 || indexSuccess !== -1){\n                setValue({...formInputs, disableButton: false})\n            } \n            setMessage(msg)\n        })\n    }\n\n    const handleChangeScraper = (event) =>{\n        setCheck({ ...checkScraper, [event.target.name]: event.target.checked })\n    };\n    const handleChange = (prop) => (event) =>{\n        setValue({...formInputs, [prop]: event.target.value})\n    };\n    const handleClose = () => {\n        setMessage(\"\")\n        setOpen(false);\n    };  \n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        let scraper = \"\"\n        if (checkScraper[\"checkH\"] === true){\n            scraper+=\"HOTELES,\"\n        }\n        if (checkScraper[\"checkR\"] === true){\n            scraper+=\"RESTAURANTES,\"\n        }\n        if (checkScraper[\"checkT\"] === true){\n            scraper+=\"TOURS,\"\n        }\n        let json = {...formInputs, \"scraper\": scraper}\n        setValue({...formInputs, \"disableButton\": true})\n        setOpen(true)        \n        http.post(\"api/run_scrapper\", json)\n        .then(response => response.data)\n        .then(response => {\n            console.log(response)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    return (\n        <div>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                disableBackdropClick\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\">\n                <DialogTitle id=\"alert-dialog-title\">\n                    Trabajando en....     {/* Trabajando en .<Avatar alt=\"Bender trabajando\" src=\"/giphy.gif\"/> */}\n                </DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {message}\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus disabled={formInputs.disableButton}>\n                        Cerrar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <form onSubmit={handleSubmit}>\n                <Card>\n                    <CardHeader className={classes.card} title=\"Bender Familia Nómade\" variant=\"outlined\"\n                        avatar={\n                            <Avatar alt=\"Familia nomade\" src=\"/nomade-logo.png\" className={classes.large}/>\n                        } subheader=\"Datos de busqueda\"\n                    >\n                    </CardHeader>\n                    <CardContent>\n                        <div className={classes.root}>\n                            <div>\n                                <TextField id=\"city\" label=\"Ubicación\" className={classes.textField}\n                                    value={formInputs.city} onChange={handleChange('city')} required\n                                    error={formInputs.city === \"\"} helperText={formInputs.city === \"\" ? 'Campo requerido!' : ' '} \n                                />\n                                <TextField  id=\"country\" label=\"Pais\" defaultValue=\"\" className={classes.textField}\n                                    values={formInputs.country} onChange={handleChange('country')}/>\n                                <TextField id=\"fecha\" label=\"Fecha\"  onChange={handleChange('fecha')} className={classes.textField}\n                                    value={formInputs.fecha} required error={formInputs.fecha === \"\"} helperText={formInputs.fecha === \"\" ? 'Campo requerido!':' '}/>                        \n                            </div>\n                            <div>\n                                <FormControl component=\"fieldset\" className={classes.margin} required>\n                                <FormLabel component=\"legend\">Buscar</FormLabel>\n                                <FormGroup row>\n                                    <FormControlLabel control={<Checkbox checked={checkScraper.checkH}\n                                            onChange={handleChangeScraper} name=\"checkH\" color=\"primary\"/>}\n                                        label=\"Hoteles\" labelPlacement=\"bottom\"\n                                    />\n                                    <FormControlLabel control={<Checkbox checked={checkScraper.checkR}\n                                            onChange={handleChangeScraper} name=\"checkR\" color=\"primary\"/>}\n                                        label=\"Restaurantes\" labelPlacement=\"bottom\"\n                                    />\n                                    <FormControlLabel control={<Checkbox checked={checkScraper.checkT}\n                                            onChange={handleChangeScraper} name=\"checkT\" color=\"primary\"/>}\n                                        label=\"Tours\" labelPlacement=\"bottom\"\n                                    />\n                                </FormGroup>\n                                </FormControl>\n                            </div>\n                            { checkScraper.checkH &&\n                            <div>\n                                <FormControl component=\"fieldset\" className={classes.margin}>\n                                    <FormLabel component=\"legend\">Categoria</FormLabel>\n                                    <RadioGroup row aria-label=\"categoria\" name=\"Categoria\"  value={formInputs.category} onChange={handleChange('category')}>\n                                        <FormControlLabel value=\"2\" control={<Radio color=\"primary\" />} label=\"2\" labelPlacement=\"bottom\"/>\n                                        <FormControlLabel value=\"3\" control={<Radio color=\"primary\" />} label=\"3\" labelPlacement=\"bottom\"/>\n                                        <FormControlLabel value=\"4\" control={<Radio color=\"primary\" />} label=\"4\" labelPlacement=\"bottom\"/>\n                                        <FormControlLabel value=\"5\" control={<Radio color=\"primary\" />} label=\"5\" labelPlacement=\"bottom\"/>\n                                        <FormControlLabel value=\"0\" control={<Radio color=\"primary\" />} label=\"Otros\" labelPlacement=\"bottom\"/>\n                                        <FormControlLabel value=\"-1\" control={<Radio color=\"primary\" />} label=\"Ninguno\" labelPlacement=\"bottom\"/>\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                            }\n                            { checkScraper.checkH &&\n                            <div>\n                                <FormControl component=\"fieldset\" className={classes.margin}>\n                                    <FormLabel component=\"legend\">Reseña</FormLabel>\n                                    <RadioGroup row aria-label=\"resena\" name=\"Resena\"  value={formInputs.review} onChange={handleChange('review')}>\n                                        <FormControlLabel value=\"90\" control={<Radio color=\"primary\" />} label=\"9\" labelPlacement=\"bottom\"/>\n                                        <FormControlLabel value=\"80\" control={<Radio color=\"primary\" />} label=\"8\" labelPlacement=\"bottom\"/>\n                                        <FormControlLabel value=\"70\" control={<Radio color=\"primary\" />} label=\"7\" labelPlacement=\"bottom\"/>\n                                        <FormControlLabel value=\"60\" control={<Radio color=\"primary\" />} label=\"6\" labelPlacement=\"bottom\"/>\n                                        <FormControlLabel value=\"999\" control={<Radio color=\"primary\" />} label=\"Otros\" labelPlacement=\"bottom\"/>\n                                        <FormControlLabel value=\"-1\" control={<Radio color=\"primary\" />} label=\"Ninguno\" labelPlacement=\"bottom\"/>\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                            }\n                            { checkScraper.checkR &&\n                            <div>\n                                <FormControl component=\"fieldset\" className={classes.margin}>\n                                    <FormLabel component=\"legend\">Precio</FormLabel>\n                                    <RadioGroup row aria-label=\"precio\" name=\"Precio\"  value={formInputs.precio} onChange={handleChange('precio')}>\n                                        <FormControlLabel value=\"alta\" control={<Radio color=\"primary\" />} label=\"Alta\" labelPlacement=\"bottom\"/>\n                                        <FormControlLabel value=\"media\" control={<Radio color=\"primary\" />} label=\"Media\" labelPlacement=\"bottom\"/>\n                                        <FormControlLabel value=\"baja\" control={<Radio color=\"primary\" />} label=\"Economica\" labelPlacement=\"bottom\"/>\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                            }\n                        </div>\n                       \n                    </CardContent>\n                    <CardActions disableSpacing>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" value=\"submit\" >\n                            BENDER, BUSCA!\n                        </Button>\n                    </CardActions>\n                </Card>\n            </form>\n        </div>\n        \n    );\n}\n// disabled={formInputs.disableButton}\nexport default FormScrapper;","import React from 'react';\nimport { Grid } from '@material-ui/core';\n//import { makeStyles } from '@material-ui/core/styles';  \nimport FormScrapper from './components/Form'\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#73237F',\n    },\n    tonalOffset: 0.2,\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\n          <Grid item xs={6}>\n            <FormScrapper />\n          </Grid>\n        </Grid>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}